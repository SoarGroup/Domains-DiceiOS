#Maybe should subtract my unknowns - doesn't want to depend on them.

sp {compute-bid-probability-with-assumed-dice*propose*compute-bid-probability
   (state <s> ^name compute-bid-probability-with-assumed-dice
              ^dice-counts.dice-count.face unknown
              ^superstate.operator.holds-probability
              ^superstate.last-bid <so>)
   (<so> ^face <face>
         ^multiplier <multipler>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name compute-bid-probability
         ^face <face>
         ^multiplier <multipler>)
}

## 1 bid
sp {apply*compute-bid-probability*1*bidxx
   (state <s> ^name compute-bid-probability-with-assumed-dice
              ^operator <op>
              ^dice-counts.dice-count <dc1> <dc2>
              ^superstate.operator <so>)
   (<op> ^name compute-bid-probability
         ^face 1
         ^multiplier <bid-multi>)
   (<dc1> ^face 1
          ^count <multi-1>)
   (<dc2> ^face unknown
          ^count <multi-unknown>)
-->
   (write (crlf) |  Bid: | <bid-multi> | 1's. Known: | <multi-1> |. Unknown: | <multi-unknown> |. Estimated total: |
   (+ (/ <multi-unknown> 6) <multi-1>) | Bid Difference: |
   (- (+ (/ <multi-unknown> 6) <multi-1>) <bid-multi>))
   (<s> ^total-known (- <multi-1> <bid-multi>)
        ^total-possible (- (+ <multi-unknown> <multi-1>) <bid-multi>))
   (<so> ^probability (compute-dice-probability <multi-unknown> 6 (- <bid-multi> <multi-1>) ge))   
}
#####

sp {apply*compute-bid-probability*special-rules*bidxx
   (state <s> ^name compute-bid-probability-with-assumed-dice
              ^operator <op>
              ^top-state.io <io>
              ^dice-counts.dice-count <dc1> <dc2>
              ^superstate.operator <so>)
   (<op> ^name compute-bid-probability
         ^face { <> 1 <face> }
         ^multiplier <bid-multi>)
   (<io> ^input-link.state.special true)
   (<dc1> ^face <face>
          ^count <multi-1>)
   (<dc2> ^face unknown
          ^count <multi-unknown>)
-->
   (write (crlf) |  Bid: | <bid-multi> | | <face> |'s. Estimated total: | (+ (/ <multi-unknown> 6) <multi-1>) | Bid Difference: | (- (+ (/ <multi-unknown> 6) <multi-1>) <bid-multi>) | special rules|)
   (<s> ^total-known (- <multi-1> <bid-multi>)
        ^total-possible (- (+ <multi-unknown> <multi-1>) <bid-multi>))
   (<so> ^probability (compute-dice-probability <multi-unknown> 3 (- <bid-multi> <multi-1>) ge))   
}

sp {apply*compute-bid-probability*not-special-rules*bidxx
   (state <s> ^name compute-bid-probability-with-assumed-dice
              ^operator <op>
              ^superstate.operator <so>
              ^top-state <ts>
              ^dice-counts.dice-count <dc1> <dc2> <dc3>)
   (<op> ^name compute-bid-probability
         ^face { <> 1 <face> }
         ^multiplier <bid-multi>)
   (<ts> ^io.input-link.state.special false
         ^io.output-link <out>)
   (<dc1> ^face <face>
          ^count <multi-bid>)
   (<dc2> ^face 1
          ^count <multi-1>)
   (<dc3> ^face unknown
          ^count <multi-unknown>)
-->
   (write (crlf) |  Bid: | <bid-multi> | | <face> |'s. Estimated total: | (+ (/ <multi-unknown> 3) <multi-1> <multi-bid>) | Bid Difference: | (- (+ (/ <multi-unknown> 3) <multi-1> <multi-bid>) <bid-multi>) | normal rules|)
   (<s> ^total-known (- (+ <multi-bid> <multi-1>) <bid-multi>)
        ^total-possible (- (+ <multi-unknown> <multi-bid> <multi-1>) <bid-multi>))
   (<so> ^probability (compute-dice-probability <multi-unknown> 3  (- <bid-multi> (+ <multi-bid> <multi-1>)) ge))   
}


