### This operator creates preferences in the superstate based on the evaluations. 
# It translates probabilies into numeric preferences (rescaled for RL) and creates symbolic preference using heuristics.

sp {selection*propose*create-preferences
   (state <s> ^name selection)
-->
   (<s> ^operator <op> + =, <)
   (<op> ^name create-preferences)
}

sp {selection*apply*create-preferences*convert*probability*numeric-preference*normalized
   (state <s> ^name selection
              ^operator.name create-preferences
              ^top-state <ss>
              ^evaluation <e1>)
   (<ss> ^desired <d>
        -^probabilities 0)
   (<e1> ^superoperator <x>
         ^probability <nv>
         ^desired <d>)
-->
   (<ss> ^operator <x> = (- (* 2 <nv>) 1))}

## For experimentation, set all preferences to 0 as control condition.

sp {selection*apply*create-preferences*convert*probability*numeric-preference-0
   (state <s> ^name selection
              ^operator.name create-preferences
              ^top-state <ss>
              ^evaluation <e1>)
   (<ss> ^desired <d>
         ^probabilities 0)
   (<e1> ^superoperator <x>
         ^probability <nv>
         ^desired <d>)
-->
   (<ss> ^operator <x> = 0)}

###################################

### Heuristics. Only used if ^heruistics true.
## Always prefer a bid to a challenge or pass if it has a higher probability (don't take chances with a challenge - don't waste a pass).

sp {selection*apply*create-preferences*compare*perfect-challenge-always
   #:interrupt
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value 1.0
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value <sv>
       ^desired <d>)
  (<x> ^name challenge)
  (<y> ^name { << bid exact pass >> <bid> })
-->
      (write (crlf) |H0: Prefer Perfect Challenge | <x> | to | <bid> | | <y>)
      (<ss> ^operator <x> >)
}

sp {selection*apply*create-preferences*compare*bid-better-challenge-pass
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences
              -^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value >= <sv>
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value { <> 1.0 <sv> }
       ^desired <d>)
  (<x> ^name bid)
  (<y> ^name { << challenge pass >> <bid> })
-->
      (write (crlf) |H1: Prefer Better Bid | <x> | to | <bid> | | <y>)
      (<ss> ^operator <y> <)}

# Prefer Certain Pass to good challenge

sp {selection*apply*create-preferences*compare*better-pass-challenge
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
             ^operator.name create-preferences
             ^superstate <ss>
             ^evaluation <e1> { <> <e1> <e2> })
  (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value >= <sv>
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value { <> 1.0 <sv> }
       ^desired <d>)
  (<x> ^name pass)
  (<y> ^name challenge)
-->
      (write (crlf) |H2: Prefer Better pass | <x> | to challenge | <y>)
      (<ss> ^operator <x> > <y>)}

# prefer good bid if => .8 to certain pass
sp {selection*apply*create-preferences*compare*good-bid-better-certain-pass
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences
             -^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
         ^heuristics true)
   (<e1> ^superoperator <x>
         ^numeric-value >= .8
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value >= .8
         ^desired <d>)
   (<x> ^name bid)
   (<y> ^name pass)
-->
   (write (crlf) |H3: Prefer good bid | <x> | to good pass | <y>)
   (<ss> ^operator <y> < <x>)}

## Don't pass on first bid
### Should be redundant with previous ones, but for some reason it isn't

sp {selection*apply*create-preferences*avoid-pass-first-bid
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences
              ^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e2>)
   (<ss> ^desired <d>
         ^heuristics true)
   (<e2> ^superoperator <y>
         ^desired <d>)
   (<y> ^name pass)
-->
   (write (crlf) |H4: Don't pass on first bid | <y>)
   (<ss> ^operator <y> -)}

### Prefer Bid for same face as next player's last bid to bid for some other face (that is not the last bid).

sp {selection*apply*create-preferences*compare*bid-better-next-bid # prefer next face for equal probability bids except last bid
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences
              ^top-state <ts>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ts> ^next-player-data.face <face>
         ^heuristics true
         ^desired <d>
         ^io.input-link.state.last-bid <lb>)
   (<lb> -^face <lface>)
   (<e1> ^superoperator <x>
         ^numeric-value >= <sv>
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value <sv>
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
       -^push-face)
   (<y> ^name bid
        ^face { <lface> <> <face> })
-->
   (write (crlf) |H5: Prefer Bid for same face as next player's last bid | <x> | to other bid: | <y>)
   (<ts> ^operator <x> > <y>)}

### Prefer push Bid for same face as player's last bid to bid for some other face (that is not the last bid).

sp {selection*apply*create-preferences*compare*bid-better-next-push-bid # prefer next face for equal probability bids except last bid
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^top-state <ts>
              ^operator.name create-preferences  
              ^evaluation <e1> { <> <e1> <e2> })
   (<ts> ^next-player-data.face <face>
         ^heuristics true 
         ^desired <d>
         ^io.input-link.state.last-bid <lb>)
   (<lb> -^face <lface>)
   (<e1> ^superoperator <x>
         ^numeric-value >= <sv>
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value <sv>
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
        ^push-face)
   (<y> ^name bid
        ^face { <lface> <> <face> }
        ^push-face)
-->
     (write (crlf) |H6: Prefer Push Bid for same face as next player's last bid | <x> | to other push bid: | <y>)
    (<ts> ^operator <x> > <y>)}


### Prefer a no push bid that is good (> .75) to a push bid.

sp {selection*apply*create-preferences*compare*push-no-push*prefer-no-push
  #:interrupt
   (state <s> ^name selection
              ^top-state.heuristics-chunked true
              ^operator.name create-preferences           
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
         ^heuristics true)
   (<e1> ^superoperator <x>
         ^desired <d>
         ^numeric-value { <num> > .75 })
   (<e2> ^superoperator { <> <x> <y> }
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
       -^push-face)
   (<y> ^name bid
       ^push-face)
-->
   (write (crlf) |H7: Prefer Bid over Push Bid: | <face> | No Push is worth: | <num>)
   (<ss> ^operator <x> > <y>)}


##################  no chunking of heuristics

### Heuristics. Only used if ^heruistics true.
## Always prefer a bid to a challenge or pass if it has a higher probability (don't take chances with a challenge - don't waste a pass).

sp {selection*apply*create-preferences*compare*bid-better-challenge-pass*no-chunk
   (state <s> ^name selection
              ^quiescence t
              ^operator.name create-preferences
              ^top-state.heuristics-chunked false
              -^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value >= <sv>
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value { <> 1.0 <sv> }
       ^desired <d>)
  (<x> ^name bid)
  (<y> ^name { << challenge pass >> <bid> })
-->
      (write (crlf) |H1: Prefer Better Bid | <x> | to | <bid> | | <y>)
      (<ss> ^operator <y> <)
}
	  
sp {selection*apply*create-preferences*compare*perfect-challenge-always*no-chunk
	#:interrupt
   (state <s> ^name selection
              ^top-state.heuristics-chunked false
              ^operator.name create-preferences
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value 1.0
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value <sv>
       ^desired <d>)
  (<x> ^name challenge)
  (<y> ^name { << bid exact pass >> <bid> })
-->
      (write (crlf) |H0: Prefer Perfect Challenge | <x> | to | <bid> | | <y>)
      (<ss> ^operator <x> >)
}

# Prefer Certain Pass to good challenge

sp {selection*apply*create-preferences*compare*better-pass-challenge*no-chunk
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
             ^operator.name create-preferences
             ^superstate <ss>
             ^evaluation <e1> { <> <e1> <e2> })
  (<ss> ^desired <d>
        ^heuristics true)
  (<e1> ^superoperator <x>
        ^numeric-value > <sv>
        ^desired <d>)
  (<e2> ^superoperator { <> <x> <y> }
        ^numeric-value <sv>
       ^desired <d>)
  (<x> ^name pass)
  (<y> ^name challenge)
-->
      (write (crlf) |H2: Prefer Better pass | <x> | to challenge | <y>)
      (<ss> ^operator <x> > <y>)}

# prefer good bid if => .8 to certain pass
sp {selection*apply*create-preferences*compare*good-bid-better-certain-pass*no-chunk
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
              ^operator.name create-preferences
             -^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
         ^heuristics true)
   (<e1> ^superoperator <x>
         ^numeric-value >= .8
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value >= .8
         ^desired <d>)
   (<x> ^name bid)
   (<y> ^name pass)
-->
   (write (crlf) |H3: Prefer good bid | <x> | to good pass | <y>)
   (<ss> ^operator <y> < <x>)}

## Don't pass on first bid
### Should be redundant with previous ones, but for some reason it isn't

sp {selection*apply*create-preferences*avoid-pass-first-bid*no-chunk
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
              ^operator.name create-preferences
              ^top-state.io.input-link.state.last-bid nil
              ^superstate <ss>
              ^evaluation <e2>)
   (<ss> ^desired <d>
         ^heuristics true)
   (<e2> ^superoperator <y>
         ^desired <d>)
   (<y> ^name pass)
-->
   (write (crlf) |H4: Don't pass on first bid | <y>)
   (<ss> ^operator <y> -)}

### Prefer Bid for same face as next player's last bid to bid for some other face (that is not the last bid).

sp {selection*apply*create-preferences*compare*bid-better-next-bid*no-chunk # prefer next face for equal probability bids except last bid
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
              ^operator.name create-preferences
              ^top-state <ts>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ts> ^next-player-data.face <face>
         ^heuristics true
         ^desired <d>
         ^io.input-link.state.last-bid <lb>)
   (<lb> -^face <lface>)
   (<e1> ^superoperator <x>
         ^numeric-value >= <sv>
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value <sv>
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
       -^push-face)
   (<y> ^name bid
        ^face { <lface> <> <face> })
-->
   (write (crlf) |H5: Prefer Bid for same face as next player's last bid | <x> | to other bid: | <y>)
   (<ts> ^operator <x> > <y>)}

### Prefer push Bid for same face as player's last bid to bid for some other face (that is not the last bid).

sp {selection*apply*create-preferences*compare*bid-better-next-push-bid*no-chunk # prefer next face for equal probability bids except last bid
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
              ^top-state <ts>
              ^operator.name create-preferences  
              ^evaluation <e1> { <> <e1> <e2> })
   (<ts> ^next-player-data.face <face>
         ^heuristics true 
         ^desired <d>
         ^io.input-link.state.last-bid <lb>)
   (<lb> -^face <lface>)
   (<e1> ^superoperator <x>
         ^numeric-value >= <sv>
         ^desired <d>)
   (<e2> ^superoperator { <> <x> <y> }
         ^numeric-value <sv>
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
        ^push-face)
   (<y> ^name bid
        ^face { <lface> <> <face> }
        ^push-face)
-->
     (write (crlf) |H6: Prefer Push Bid for same face as next player's last bid | <x> | to other push bid: | <y>)
    (<ts> ^operator <x> > <y>)}


### Prefer a no push bid that is good (> .75) to a push bid.

sp {selection*apply*create-preferences*compare*push-no-push*prefer-no-push*no-chunk
  #:interrupt
   (state <s> ^name selection
              ^quiescence t
              ^top-state.heuristics-chunked false
              ^operator.name create-preferences           
              ^superstate <ss>
              ^evaluation <e1> { <> <e1> <e2> })
   (<ss> ^desired <d>
         ^heuristics true)
   (<e1> ^superoperator <x>
         ^desired <d>
         ^numeric-value { <num> > .75 })
   (<e2> ^superoperator { <> <x> <y> }
         ^desired <d>)
   (<x> ^name bid
        ^face <face>
       -^push-face)
   (<y> ^name bid
       ^push-face)
-->
   (write (crlf) |H7: Prefer Bid over Push Bid: | <face> | No Push is worth: | <num>)
   (<ss> ^operator <x> > <y>)}
