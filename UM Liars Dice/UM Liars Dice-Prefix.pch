//
// Prefix header for all source files of the 'Liar's Dice' target in the 'Liar's Dice' project
//

#pragma clang diagnostic ignored "-Wempty-translation-unit"

#import <Availability.h>

#ifndef __IPHONE_7_0

#error "This project uses features only available in iOS SDK 7.0 and later."

#endif

#import <Foundation/Foundation.h>
#import "objc/runtime.h"

#import <UIKit/UIKit.h>

@interface NSObject (LDContext)
- (NSMutableDictionary *)LDContext;
@end
@implementation NSObject (LDContext)
- (NSMutableDictionary *)LDContext
{
    static char key;
    NSMutableDictionary *contextInfo = objc_getAssociatedObject(self, &key);
    if (!contextInfo) {
        contextInfo = [NSMutableDictionary dictionary];
        objc_setAssociatedObject(self, &key, contextInfo, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
    }
    return contextInfo;
}
@end

extern const int ddLogLevel;
#import "LiarsDiceLog.h"

@interface UIApplication (HelperMethods)

+ (NSString *) appVersion;
+ (NSString *) build;
+ (NSString *) versionBuild;

@end

@implementation UIApplication (HelperMethods)

+ (NSString *) appVersion
{
	return [[NSBundle mainBundle] objectForInfoDictionaryKey: @"CFBundleShortVersionString"];
}

+ (NSString *) build
{
	return [[NSBundle mainBundle] objectForInfoDictionaryKey: (NSString *)kCFBundleVersionKey];
}

+ (NSString *) versionBuild
{
	NSString * version = [self appVersion];
	NSString * build = [self build];
	
	NSString * versionBuild = [NSString stringWithFormat: @"v%@", version];
	
	if (![version isEqualToString: build]) {
		versionBuild = [NSString stringWithFormat: @"%@(%@)", versionBuild, build];
	}
	
	return versionBuild;
}

@end
